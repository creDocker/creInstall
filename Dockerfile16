# Adapted from 
FROM tamboraorg/creubuntu:2016.0
MAINTAINER Michael Kahle <michael.kahle@yahoo.de>

ARG BUILD_YEAR=2016
ARG BUILD_MONTH=0
ARG BUILD_TAG=2016.0

#ENV DEBIAN_FRONTEND noninteractive
#ENV INITRD No
#ENV LANG en_US.UTF-8
ENV NODE_VERSION 10.15.3

LABEL Name="Node for CRE" \
      CRE=$CRE_VERSION \ 
      Year=$BUILD_YEAR \
      Month=$BUILD_MONTH \
      Version=$NODE_VERSION \
      OS="Ubuntu:$UBUNTU_VERSION" \
      Build_=$BUILD_TAG 

# Install nodejs
RUN curl -sL https://deb.nodesource.com/setup_12.x | bash - && apt-get install -y nodejs  ## npm included in nodejs
#RUN apt-get update && apt-get install -y nodejs npm  ## npm not included in nodejs


# https://medium.com/@aguidrevitch/when-installation-of-global-package-using-npm-inside-docker-fails-b551b5dda389
# Dockerfile sometimes run npm as nobody.

ENV NPM_CONFIG_PREFIX=/cre/node/.npm-global
ENV PATH=$PATH:/cre/node/.npm-global/bin
RUN mkdir -p /cre/node/.npm-global
RUN npm -g config set user root 

# can be used to update node
RUN npm install -g n 
#RUN n stable # update node
RUN npm install -g npm-install-peers
RUN npm install -g npm-add-script  
RUN npm install -g keywords
RUN npm install -g json
RUN npm install -g set-version
RUN npm install -g npm-get-version

## npm set init.author.email "example-user@example.com"
## npm set init.author.name "example_user"
## npm config set init.author.url http://iamsim.me/

RUN npm set init.version "${CRE_VERSION}.0"
RUN npm set init.license "Apache-2.0"

# npm set init.author.email "example-user@example.com" 
# npm set init.author.name "example_user" 
# npm config set init.author.url http://iamsim.me/ 
# https://docs.npmjs.com/creating-a-package-json-file#default-values-extracted-from-the-current-directory 

# https://sdkman.io/install
## NOT WORKING ON OLD OS VERSION
# ENV SDKMAN_DIR=/cre/sdkman
# RUN curl -s "https://get.sdkman.io" | bash
# RUN chmod 777 "$SDKMAN_DIR/bin/sdkman-init.sh"
# RUN /bin/bash -c "source $SDKMAN_DIR/bin/sdkman-init.sh; sdk version"

COPY cre /cre

# https://sdkman.io/install
ENV SDKMAN_DIR=/cre/sdkman

# might copy old or fetch and patch current version
## RUN cp /cre/versions/u16.04/sdkman/v5.15.99/sdkman-install.sh /cre/sdkman-install.sh
RUN curl -s "https://get.sdkman.io" > /cre/sdkman-install.sh
RUN sed -e 's|SDKMAN_NATIVE_VERSION=".*"|SDKMAN_NATIVE_VERSION="0.0.20"|' -i /cre/sdkman-install.sh

RUN chmod 777 /cre/sdkman-install.sh
RUN /bin/bash /cre/sdkman-install.sh
RUN chmod 777 "$SDKMAN_DIR/bin/sdkman-init.sh"
RUN /bin/bash -c "source $SDKMAN_DIR/bin/sdkman-init.sh; sdk version"

RUN mkdir -p /cre && touch /cre/versions.txt && \ 
    echo "$(date +'%F %R') \t creNode \t ${NODE_VERSION}" >> /cre/versions.txt  && \
    echo "$(date +'%F %R') \t  ldd \t $(ldd --version | grep GLIBC)" >> /cre/versions.txt && \
    echo "$(date +'%F %R') \t  node \t $(node --version)" >> /cre/versions.txt && \
    echo "$(date +'%F %R') \t  npm \t $(npm --version)" >> /cre/versions.txt && \
    echo "$(date +'%F %R') \t  sdk \t $(/cre/sdk.sh version | grep SDKMAN | grep -v available | sed -e 's|SDKMAN ||' | sed -e 's/\e\\[[0-9;:]*[a-zA-Z]//g')" >> /cre/versions.txt 

WORKDIR "/cre/node"

ENTRYPOINT ["/cre/node-entrypoint.sh"]

CMD ["shoreman", "/cre/node-procfile"]
